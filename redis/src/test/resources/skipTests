#TODO: Currently it is not possible to make a distinction between the two REDIS dialects
org.hibernate.ogm.backendtck.associations.collection.types.MapContentsStoredInSeparateDocumentTest
org.hibernate.ogm.backendtck.associations.storageconfiguration.AssociationStorageConfiguredViaPropertyTest
org.hibernate.ogm.backendtck.associations.storageconfiguration.AssociationStorageConfiguredViaAnnotationsTest
org.hibernate.ogm.backendtck.associations.storageconfiguration.AssociationStorageConfiguredProgrammaticallyTest
org.hibernate.ogm.backendtck.queries.QueriesWithToOnePropertyTest
org.hibernate.ogm.backendtck.queries.QueriesWithAssociationsTest
org.hibernate.ogm.backendtck.queries.CompositeIdQueriesTest
org.hibernate.ogm.backendtck.queries.QueriesWithEmbeddedCollectionTest
org.hibernate.ogm.backendtck.queries.SimpleQueriesWithTablePerClassNotSupportedTest
org.hibernate.ogm.backendtck.dialectinvocations.GridDialectOperationInvocationsForElementCollectionTest
org.hibernate.ogm.backendtck.dialectinvocations.GridDialectOperationInvocationsForOneToOneTest
org.hibernate.ogm.backendtck.optimisticlocking.OptimisticLockingTest
org.hibernate.ogm.backendtck.batchfetching.MultiGetSingleColumnIdTest
org.hibernate.ogm.backendtck.batchfetching.MultiGetMultiColumnsIdTest
org.hibernate.ogm.backendtck.batchfetching.MultiGetEmbeddedIdTest

# Note that CouchDB has its own optimistic locking scheme, handled by the dialect itself.
org.hibernate.ogm.backendtck.optimisticlocking.OptimisticLockingTest#deletingEntityUsingOldVersionCausesExceptionUsingAtomicFindAndDelete
org.hibernate.ogm.backendtck.optimisticlocking.OptimisticLockingTest#updatingEntityUsingOldVersionCausesExceptionUsingAtomicFindAndUpdate